spring.application.name=PaymentTransferMicroservice
server.port=0

#Custom Properties
custom.mock.web.service=localhost:8080

#Spring Data JPA Properties
spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=create

#Kafka Properties
#spring.kafka.producer.transaction-id-prefix=transfer-microservice-${random.value}-
spring.kafka.bootstrap-servers=localhost:9092,localhost:9094,localhost:9096
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=10
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.delivery.timeout.ms=10000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=5000
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
logging.level.org.springframework.kafka.transaction=TRACE
logging.level.org.springframework.transaction=TRACE

#Spring Cloud Properties
eureka.client.service-url.defaultZone=http://localhost:7777/eureka
eureka.instance.instance-id=PaymentTransferMicroservice-${random.value}